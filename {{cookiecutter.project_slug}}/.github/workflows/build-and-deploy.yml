name: Build
on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop
  workflow_dispatch:
    inputs:
      version:
        description: 'Image version'
        required: true
      
env:
  REGISTRY: "registry.digitalocean.com/ncr"
  {% if cookiecutter.include_client == 'y' %}
  CLIENT_IMAGE_NAME: "{{ cookiecutter.project_slug }}_client"
  CLIENT_DOCKERFILE: "./ops/client/prod/Dockerfile"
  {% endif %}
  {%- if cookiecutter.include_server == 'y' %}
  SERVER_IMAGE_NAME: "{{ cookiecutter.project_slug }}_server"
  SERVER_DOCKERFILE: "./ops/server/prod/Dockerfile"
  {% endif %}

jobs:
  {% if cookiecutter.include_server == 'y' %}
  run-python-tests:
    name: Run Python Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Server Tests
        run: make test-server
  {% endif %}
  {% if cookiecutter.include_client == 'y' %}
  run-js-tests:
    name: Run JavaScript Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Client tests
        run: make test-client
  {% endif %}
  build-and-push:
    name: Build & Push Images
    runs-on: ubuntu-latest
    if: success()
    needs:
      {% if cookiecutter.include_client == 'y' %}
      - run-js-tests
      {% endif %}
      {% if cookiecutter.include_server == 'y' %}
      - run-python-tests
      {% endif %}
    steps:
      -
        name: Checkout code
        uses: actions/checkout@v2

      -
        name: Get branch name
        id: branch-meta
        uses: tj-actions/branch-names@v5.4

      -
        name: Set Outputs
        id: vars
        run: |
          echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

          if [[ {{ '${{ steps.branch-meta.outputs.current_branch }}' }} == 'main' ]]; then
            echo "::set-output name=image_type::prd"
          else
            echo "::set-output name=image_type::stg"
          fi

      {% if cookiecutter.include_server == 'y' %}
      - 
        name: Build server container image
        run: docker build -t {{ '${{ env.REGISTRY }}/${{ env.SERVER_IMAGE_NAME }}:${{ steps.vars.outputs.image_type }}-${{ steps.vars.outputs.sha_short }} -f ${{ env.SERVER_DOCKERFILE }}' }} .
      {% endif %}
      {% if cookiecutter.include_client == 'y' %}
      -
        name: Build client container image
        run: docker build -t {{ '${{ env.REGISTRY }}/${{ env.CLIENT_IMAGE_NAME }}:${{ steps.vars.outputs.image_type }}-${{ steps.vars.outputs.sha_short }} -f ${{ env.CLIENT_DOCKERFILE }}' }} .
      {% endif %}
      -
        name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: {{ '${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}' }}
    
      -
        name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 1200

      {% if cookiecutter.include_server == 'y' %}
      -
        name: Push image to DigitalOcean Container Registry for server
        run: docker push {{ '${{ env.REGISTRY }}/${{ env.SERVER_IMAGE_NAME }}:${{ steps.vars.outputs.image_type }}-${{ steps.vars.outputs.sha_short }}' }}
      {% endif %}
      {% if cookiecutter.include_client == 'y' %}
      - name: Push image to DigitalOcean Container Registry for client
        run: docker push {{ '${{ env.REGISTRY }}/${{ env.CLIENT_IMAGE_NAME }}:${{ steps.vars.outputs.image_type }}-${{ steps.vars.outputs.sha_short }}' }}
      {% endif %}
